(function(){
'use strict';

angular.module('demoApp')
    .factory('carServices', ['CAR_PATH', 'CAR_PATH_DISTANCE', 'CAR_ICON', '$timeout', 'gmapServices', carServices]);

    function carServices (CAR_PATH, CAR_PATH_DISTANCE, CAR_ICON, $timeout, gmapServices) {
        var service = {};

        var carCanvasId = 'carcanvas';

        var polyline = null,
            polylinePath = []
        ;

        var img = new Image();
            img.src = CAR_ICON;

        var eol = CAR_PATH_DISTANCE,// eol is distance generated by directions service ex. result.routes[0].legs[0].distance.value
            k = 0,
            step = 5,
            lastVertex = 0,
            angle = 0,
            dstep = 0
        ;

        service.speed = 100,
        service.car = null;

        service.isPaused = false;
        // force pause
        //service.paused_ = false;

        service.initialize = initialize;
        service.runCar = runCar;
        service.startCar = startCar;

        service.accelerate = accelerate;

        service.accelerateCar = accelerateCar;
        service.pauseCar = pauseCar;

        service.changeSpeed = changeSpeed;
        service.slowDown = slowDown;
        service.accelerateCarAfter = accelerateCarAfter;


        function initialize () {
            var p0 = gmapServices.castToLatLngObject(CAR_PATH[0]),
                p1 = gmapServices.castToLatLngObject(CAR_PATH[1]);

            gmapServices.setMapCenter(p0);

            //polyline = gmapServices.createDashedPolyline(CAR_PATH, '#000000');
            polyline = gmapServices.createPolyline(CAR_PATH);
            polylinePath = polyline.getPath().getArray();
            //gmapServices.showPolyline(polyline);

            initCar(p0, p1);
        }

        function initCar(p0, p1) {
            service.car = gmapServices.initCanvasMarker(p0, carCanvasId, CAR_ICON);

            angle = gmapServices.computeBearing(p0, p1);

            service.car.plot(angle);
        }

        function runCar (distance) {
            //console.log('run car: ',distance);

            if( !service.isPaused) { // && !service.paused_
                var point = polyline.GetPointAtDistance(distance);

                if (distance > eol || !point) {
                    alert('Trip completed! Distance: ' + (distance / 1609.344).toFixed(2) + ' miles');
                    return;
                }

                if ( k++ >= 180 / step ) {
                    gmapServices.panTo(point);
                    k = 0;
                }

                service.car.setPoint(point);

                //console.log("Miles: " + (distance / 1609.344).toFixed(2) + service.speed);

                if (polyline.GetIndexAtDistance(distance) > lastVertex) {
                    lastVertex = polyline.GetIndexAtDistance(distance);
                    if (lastVertex == polylinePath.length) {
                        lastVertex -= 1;
                    }

                    while (polylinePath[lastVertex - 1].equals(polylinePath[lastVertex])) {
                        lastVertex -= 1;
                    }

                    angle = gmapServices.computeBearing(
                        polylinePath[lastVertex - 1],
                        polylinePath[lastVertex]
                    );

                    service.car.plot(angle);
                }

                dstep = distance + step;
            }

            $timeout(function(){
                service.runCar(dstep);
            }, service.speed);
        }

        function startCar () {
            if(service.isPaused) {
                accelerateCar();
                return;
            }

            if (service.car) service.car.setMap(gmapServices.map);

            $timeout(function(){
                service.runCar(0);
            }, 0);
        }

        function accelerate (speed) {
            var _speed = speed || 100;

            changeSpeed(_speed);
            service.isPaused = false;
        }

        function accelerateCar () {
            $timeout(function(){
                changeSpeed(100);
            }, 10000);

            service.isPaused = false;
        }

        function pauseCar () {
            //changeSpeed(200);
            service.isPaused = true;
            //service.paused_ = true;
        }

        function slowDown(speed) {
            if(service.isPaused) service.isPaused = false;

            changeSpeed(speed);
        }

        function changeSpeed (speed) {
            service.speed = speed;
        }

        function accelerateCarAfter (timeMillis, speed) {
            var _timeMillis = timeMillis || 2000,
                _speed = speed || 100;

            $timeout(function(){
                accelerate(_speed);
            }, _timeMillis);
        }

        return service;
    }
}());