(function(){
'use strict';

angular.module('demoApp')
    .factory('carServices', ['CAR_PATH', 'CAR_PATH_DISTANCE', 'CAR_ICON', '$q', '$timeout', 'gmapServices', carServices]);

    function carServices (CAR_PATH, CAR_PATH_DISTANCE, CAR_ICON, $q, $timeout, gmapServices) {
        var service = {};

        var carCanvasId = 'carcanvas';
        var polylinePath = null,
            polylinePathArray = []
        ;

        var img = new Image();
            img.src = CAR_ICON;

        var eol = CAR_PATH_DISTANCE,// eol is distance generated by directions service ex. result.routes[0].legs[0].distance.value
            k = 0,
            step = 5,
            speed = '',
            tick = 100,
            lastVertex = 0,
            angle
        ;

        service.car = null;

        service.initialize = initialize;
        service.startCar = startCar;
        service.stopCar = stopCar;

        function initialize () {
            var p0 = gmapServices.castToLatLngObject(CAR_PATH[0]),
                p1 = gmapServices.castToLatLngObject(CAR_PATH[1]);

            gmapServices.setMapCenter(p0);

            polylinePath = gmapServices.createPolyline(CAR_PATH);
            polylinePathArray = polylinePath.getPath().getArray();
            gmapServices.showPolyline(polylinePath);

            initCar(p0, p1)
                .then(function(){
                    //service.startCar();
                });
        }

        function initCar(p0, p1) {
            var dfd = $q.defer();

            //service.car = gmapServices.initCanvasMarker(p0, carCanvasId, CAR_ICON);
            service.car = new CanvasMarker({
                position: p0,
                id: carCanvasId,
                image: img,
                pixelOffset: new google.maps.Size(-16, 16),
                map: gmapServices.map
            });

            angle = gmapServices.computeBearing(p0, p1);

            setTimeout(function () {
                service.car.plot(angle);
                dfd.resolve();
            }, 500);

            return dfd.promise;
        }

        function runCar (distance) {
            console.log('run car: ',distance);

            var point = polylinePath.GetPointAtDistance(distance);

            if (distance > eol || !point) {
                console.log('Trip completed');
                //console.log('Miles: ' + (distance / 1609.344).toFixed(2));
                return;
            }

            if ( k++ >= 180 / step ) {
                gmapServices.panTo(point);
                k = 0;
            }

            service.car.setPoint(point);

            console.log("Miles: " + (distance / 1609.344).toFixed(2) + speed);

            var paths = polylinePath.getPath().getArray();


            if (polylinePath.GetIndexAtDistance(distance) > lastVertex) {
                lastVertex = polylinePath.GetIndexAtDistance(distance);
                if (lastVertex == paths.length) {
                    lastVertex -= 1;
                }

                while (paths[lastVertex - 1].equals(paths[lastVertex])) {
                    lastVertex -= 1;
                }

                angle = gmapServices.computeBearing(
                    paths[lastVertex - 1],
                    paths[lastVertex]
                );

                service.car.plot(angle);
            }

            console.log('reiterating');

            var dstep = distance + step;
            $timeout(runCar(dstep), tick);
        }

        function startCar () {
            $timeout(runCar(0), 5000);
            console.log('run car!');
        }

        function stopCar () {
            console.log('stop car!');
        }

        return service;
    }
}());